<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        WLWT/h8ygD3yz0ULPwAAAABJRU5ErkJggg==
</value>
  </data>
</root>